{"version":3,"sources":["Components/Caro/CaroItem.js","Components/Caro/Dot.js","Components/Caro/Dots.js","Components/Caro/Arrows.js","Components/Caro/Caro.js","App.js","serviceWorker.js","index.js"],"names":["CaroItem","_this$props$image","this","props","image","link","style","backgroundImage","concat","backgroundSize","backgroundRepeat","backgroundPosition","react_default","a","createElement","href","className","Component","Dot","_this$props","id","active","clickDot","name","onClick","Dots","images","index","show","map","j","Caro_Dot","key","Arrows","clickPrev","clickNext","Fragment","Caro","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","state","autoplay","startTimer","componentDidUpdate","prevProps","setState","interval","setInterval","next","time","resetTimer","clearInterval","prev","e","prevState","translate","widthCaro","_this$state","length","_this$state2","config","dots","arrow","width","height","Number","_this$state3","transform","transition","Caro_CaroItem","Caro_Dots","Caro_Arrows","App","Components_Caro_Caro","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6f152b00.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass CaroItem extends Component {\r\n\r\n    render() {\r\n\r\n        const {\r\n            image, //Una Imagen\r\n            link //Su enlace\r\n        } = this.props.image;\r\n\r\n        const style = {\r\n            backgroundImage: `url(${image})`,\r\n            backgroundSize: 'cover',\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundPosition: '50% 60%'\r\n        }\r\n        return (\r\n            <a href={link}>\r\n                <div className=\"item\"\r\n                    style={style}\r\n                >\r\n                </div> \r\n            </a>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CaroItem;","import React, { Component } from \"react\";\r\n\r\nclass Dot extends Component {\r\n\r\n    render() {\r\n\r\n        const {\r\n            id,\r\n            active,\r\n            clickDot\r\n        } = this.props;\r\n\r\n        const name = active ? 'dot active': 'dot';\r\n        return (\r\n           <div className={name}\r\n                onClick={() => clickDot(id)}\r\n           > \r\n           </div> \r\n        )\r\n    }\r\n}\r\n\r\nexport default Dot;","import React, { Component } from \"react\";\r\nimport Dot from './Dot';\r\n\r\nclass Dots extends Component {\r\n\r\n    render() {\r\n\r\n        const {\r\n            images, //Toda las Imagenes\r\n            index,\r\n            clickDot,\r\n            show\r\n        } = this.props;\r\n        //Visibilidad de Dots\r\n        if(show === false) return null;\r\n\r\n        return (\r\n           <div className=\"dots\">\r\n           {\r\n                images.map((image, j) => {\r\n                    let active = (j === index)? true: false;\r\n                    return (\r\n                       <Dot \r\n                            key={j}\r\n                            id={j}\r\n                            active={active}\r\n                            clickDot={clickDot}\r\n                       /> \r\n                    )\r\n                })\r\n            }\r\n           </div> \r\n        )\r\n    }\r\n}\r\n\r\nexport default Dots;","import React, { Component } from \"react\";\r\n\r\nclass Arrows extends Component {\r\n\r\n    render() {\r\n\r\n        const {\r\n            clickPrev,\r\n            clickNext,\r\n            show\r\n        } = this.props;\r\n\r\n        //Visibilidad de Arrows\r\n        if(show === false) return null;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <button className=\"arrow prev\" onClick={() => clickPrev()}>❮</button>\r\n                <button className=\"arrow next\" onClick={() => clickNext()}>❯</button>\r\n            </React.Fragment>           \r\n        )\r\n    }\r\n}\r\n\r\nexport default Arrows;","import React, { Component } from \"react\";\r\nimport './Caro.css';\r\nimport CaroItem from './CaroItem';\r\nimport Dots from './Dots';\r\nimport Arrows from './Arrows';\r\nclass Caro extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        //console.log(this.props)\r\n        //Autoplay\r\n        const autoplay = (this.props.config && this.props.config.autoplay)? true: false;\r\n        \r\n        //Time\r\n        const time = (this.props.config && this.props.config.time)? this.props.config.time : 3000;\r\n        \r\n        // Show Dots\r\n        let dots =  true;\r\n        if(this.props.config && this.props.config.dots === false){\r\n            dots = false;\r\n        }\r\n\r\n        // Show arrow\r\n        let arrow =  true;\r\n        if(this.props.config && this.props.config.arrow === false){\r\n            arrow = false;\r\n        }\r\n\r\n        \r\n        \r\n        this.state = {\r\n            images: this.props.images,\r\n            index: 0,\r\n            translate: 0,\r\n            interval: null,\r\n            autoplay: autoplay,\r\n            time: time,\r\n            dots: dots,\r\n            arrow: arrow,\r\n            width: this.props.width,\r\n            height: this.props.height\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    componentDidMount = () => {\r\n        //Controla el autoplay\r\n        if(this.state.autoplay){\r\n            this.startTimer() //Inicia el Timer para el autoplay\r\n        }\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n    \r\n        if (prevProps.images[0].image !== this.props.images[0].image) {\r\n            this.setState({\r\n                images: this.props.images\r\n            })\r\n        }\r\n\r\n    }\r\n    \r\n    startTimer = () => {\r\n        const interval = setInterval(() => {\r\n            this.next()\r\n        }, this.state.time)\r\n\r\n        this.setState({\r\n            interval\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Limpio el timer del state y crea denuevo el timer, reiniciando el timer  \r\n     */\r\n    resetTimer = () => {\r\n        const interval = clearInterval(\r\n            this.state.interval\r\n        )\r\n        this.setState({\r\n            interval\r\n        })\r\n        this.startTimer()\r\n    }\r\n\r\n    prev = (e) => {\r\n        const { \r\n            index,      // Indice\r\n        } = this.state;\r\n\r\n        if(index === 0){ // Cuando estoy en indice cero, ya no puedo ir atras\r\n            return;\r\n        }\r\n\r\n        // No soy indice = 0, entonces\r\n        this.setState(prevState => ({\r\n            index: prevState.index - 1,\r\n            translate: prevState.translate + this.widthCaro()\r\n        }))\r\n\r\n        //Controla el autoplay\r\n        if(this.state.autoplay){\r\n            this.resetTimer()\r\n        }\r\n    }\r\n    next = (e) => {\r\n\r\n        const { \r\n            index,      // Indice\r\n            images      //Todas la imagenes\r\n        } = this.state;\r\n        const length = images.length; //Cantidad de imagenes\r\n        \r\n\r\n        //Si soy la ultima imagen, entonces\r\n        if(index === length - 1){\r\n            return this.setState({\r\n                index: 0,\r\n                translate: 0\r\n            })\r\n        }\r\n\r\n        // No soy la ultima imagen, entonces\r\n        this.setState(prevState => ({\r\n            index: prevState.index + 1,\r\n            translate: prevState.translate + -(this.widthCaro())\r\n        }));\r\n\r\n        //Controla el autoplay\r\n        if(this.state.autoplay){\r\n            this.resetTimer()\r\n        }\r\n        \r\n    }\r\n\r\n    /**\r\n     * Retorna el tamaño del visor de nuestro carousel\r\n     */\r\n    widthCaro(){\r\n        /* console.log(this.state.width);\r\n        return document.querySelector('.caro').clientWidth */\r\n        \r\n        return Number(this.state.width)\r\n    }\r\n    \r\n\r\n    clickDot = (id) => {\r\n        \r\n        const { \r\n            index,   // Indice\r\n            translate\r\n        } = this.state; \r\n\r\n        //Si haces click en el mismo lugar donde estas, no hacer nada\r\n       if(id === index) return;\r\n\r\n        if(id > index){\r\n            this.setState({\r\n                translate:  -id * (this.widthCaro())\r\n            });\r\n        } else {\r\n            this.setState({\r\n                translate:  translate + (index - id ) * (this.widthCaro())\r\n            });\r\n        }\r\n\r\n        this.setState({\r\n            index: id\r\n        });\r\n\r\n        //Reinicia el timer\r\n        \r\n        //Controla el autoplay\r\n        if(this.state.autoplay){\r\n            this.resetTimer()\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { \r\n            images,     //Imagenes que vienen del State\r\n            index,      // Indice\r\n            translate,  // Cuanto se va a trasladar\r\n            dots,       //Dots\r\n            arrow,       //Arrows\r\n            width,       //Ancho\r\n            height       //Alto\r\n        } = this.state;\r\n        \r\n\r\n        const style = {\r\n            transform: `translate(${translate}px)`,\r\n            transition: 'transform ease-out 0.45s'\r\n        }\r\n\r\n        return (\r\n           <div className=\"caro\" style={{width: `${width}px`, height:  `${height}px`}}>\r\n                <div className=\"content\"\r\n                    style={style}\r\n                >\r\n                    {\r\n                        images.map((image, index) => (\r\n                            <CaroItem key={index} image={image} />\r\n                        ))\r\n                    }\r\n                </div>\r\n                \r\n                <Dots show={dots} clickDot={this.clickDot} index={index} images={images}/>\r\n\r\n                <Arrows show={arrow} clickNext={this.next} clickPrev={this.prev}/>\r\n           </div> \r\n        )\r\n    }\r\n}\r\n\r\nexport default Caro;","import React, { Component } from 'react';\nimport Caro from './Components/Caro/Caro';\nimport './App.css'\nclass App extends Component {\n\n  constructor(props){\n    super(props)\n    this.state= {\n      images: [\n        {\n            image: \"https://luismachain95.github.io/Caro/image/shoes1.jpg\",\n            link: \"enlace1\"\n        },\n        {\n            image: \"https://luismachain95.github.io/Caro/image/shoes2.jpg\",\n            link: \"enlace2\"\n        },\n        {\n            image: \"https://luismachain95.github.io/Caro/image/shoes3.jpg\",\n            link: \"enlace3\"\n        },\n        {\n            image: \"https://luismachain95.github.io/Caro/image/shoes4.jpg\",\n            link: \"enlace4\"\n        }\n    ],\n    }\n  }\n  render() {\n    // Si no se manda nada, se pone arrow, dots (Ojo sin autoplay)\n\n    //Autoplay\n    const config = {\n      autoplay: true\n    }\n    //Autoplay y Tiempo de 1segundo \n    const config1 = {\n      autoplay: true,\n      time: 1000,\n      dots: false\n    }\n    //Autoplay, tiempo de 2 seg y sin dots\n    const config2 = {\n      autoplay: true,\n      time: 2000,\n      dots: false,\n    }\n    //Autoplay, tiempo de 2 seg, sin dots, y sin flechas\n    const config3 = {\n      autoplay: true,\n      time: 2000,\n      dots: false,\n      arrow: false\n    }\n\n    return (\n      \n      <div className=\"content\">\n        <h1>Caro - Simple Carousel (React)</h1>\n        <hr/>\n        <Caro images={this.state.images} width='750' height='480' />\n        <hr/>\n        <Caro images={this.state.images} config={config} width='750' height='480' />\n        <hr/>\n        <Caro images={this.state.images} config={config1} width='750' height='480' />\n        <hr/>\n        <Caro images={this.state.images} config={config2} width='750' height='480' />\n        <hr/>\n        <Caro images={this.state.images} config={config3} width='750' height='480' />\n      </div> \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}