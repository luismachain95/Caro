{"version":3,"sources":["Components/Caro/CaroItem.js","Components/Caro/Dot.js","Components/Caro/Dots.js","Components/Caro/Arrows.js","Components/Caro/Caro.js","App.js","serviceWorker.js","index.js"],"names":["CaroItem","_this$props$image","this","props","image","img","link","style","backgroundImage","concat","backgroundSize","backgroundRepeat","backgroundPosition","react_default","a","createElement","href","className","Component","Dot","_this$props","id","active","clickDot","name","onClick","Dots","images","index","show","map","j","Caro_Dot","key","Arrows","clickPrev","clickNext","Fragment","Caro","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","state","autoplay","startTimer","interval","setInterval","next","time","setState","resetTimer","clearInterval","prev","e","prevState","translate","widthCaro","_this$state","length","_this$state2","config","dots","arrow","document","querySelector","clientWidth","_this$state3","transform","transition","Caro_CaroItem","Caro_Dots","Caro_Arrows","App","Components_Caro_Caro","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a1d8b851.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass CaroItem extends Component {\r\n\r\n    render() {\r\n\r\n        const {\r\n            img, //Una Imagen\r\n            link //Su enlace\r\n        } = this.props.image;\r\n\r\n        const style = {\r\n            backgroundImage: `url(${img})`,\r\n            backgroundSize: 'cover',\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundPosition: '50% 60%'\r\n        }\r\n        return (\r\n            <a href={link}>\r\n                <div className=\"item\"\r\n                    style={style}\r\n                >\r\n                </div> \r\n            </a>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CaroItem;","import React, { Component } from \"react\";\r\n\r\nclass Dot extends Component {\r\n\r\n    render() {\r\n\r\n        const {\r\n            id,\r\n            active,\r\n            clickDot\r\n        } = this.props;\r\n\r\n        const name = active ? 'dot active': 'dot';\r\n        return (\r\n           <div className={name}\r\n                onClick={() => clickDot(id)}\r\n           > \r\n           </div> \r\n        )\r\n    }\r\n}\r\n\r\nexport default Dot;","import React, { Component } from \"react\";\r\nimport Dot from './Dot';\r\n\r\nclass Dots extends Component {\r\n\r\n    render() {\r\n\r\n        const {\r\n            images, //Toda las Imagenes\r\n            index,\r\n            clickDot,\r\n            show\r\n        } = this.props;\r\n\r\n        //Visibilidad de Dots\r\n        if(show === false) return null;\r\n\r\n        return (\r\n           <div className=\"dots\">\r\n           {\r\n                images.map((image, j) => {\r\n                    let active = (j === index)? true: false;\r\n                    return (\r\n                       <Dot \r\n                            key={j}\r\n                            id={j}\r\n                            active={active}\r\n                            clickDot={clickDot}\r\n                       /> \r\n                    )\r\n                })\r\n            }\r\n           </div> \r\n        )\r\n    }\r\n}\r\n\r\nexport default Dots;","import React, { Component } from \"react\";\r\n\r\nclass Arrows extends Component {\r\n\r\n    render() {\r\n\r\n        const {\r\n            clickPrev,\r\n            clickNext,\r\n            show\r\n        } = this.props;\r\n\r\n        //Visibilidad de Arrows\r\n        if(show === false) return null;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <button className=\"arrow prev\" onClick={() => clickPrev()}>❮</button>\r\n                <button className=\"arrow next\" onClick={() => clickNext()}>❯</button>\r\n            </React.Fragment>           \r\n        )\r\n    }\r\n}\r\n\r\nexport default Arrows;","import React, { Component } from \"react\";\r\nimport './Caro.css';\r\nimport CaroItem from './CaroItem';\r\nimport Dots from './Dots';\r\nimport Arrows from './Arrows';\r\nclass Caro extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        //Autoplay\r\n        const autoplay = (this.props.config && this.props.config.autoplay)? true: false;\r\n        \r\n        //Time\r\n        const time = (this.props.config && this.props.config.time)? this.props.config.time : 3000;\r\n        \r\n        // Show Dots\r\n        let dots =  true;\r\n        if(this.props.config && this.props.config.dots === false){\r\n            dots = false;\r\n        }\r\n\r\n        // Show arrow\r\n        let arrow =  true;\r\n        if(this.props.config && this.props.config.arrow === false){\r\n            arrow = false;\r\n        }\r\n\r\n        //Images\r\n        let images = [\r\n            {\r\n                img: \"https://luismachain95.github.io/Caro/image/default.jpg\",\r\n                link: \"enlace1\"\r\n            }\r\n        ];\r\n        if(this.props.images){\r\n            images = this.props.images;\r\n        }\r\n\r\n\r\n        //https://luismachain95.github.io/Caro\r\n        this.state = {\r\n            images,\r\n            index: 0,\r\n            translate: 0,\r\n            interval: null,\r\n            autoplay: autoplay,\r\n            time: time,\r\n            dots: dots,\r\n            arrow: arrow\r\n        }\r\n                \r\n    }\r\n\r\n    componentDidMount = () => {\r\n\r\n        \r\n        //Controla el autoplay\r\n        if(this.state.autoplay){\r\n            this.startTimer() //Inicia el Timer para el autoplay\r\n        }\r\n    }\r\n\r\n    \r\n    startTimer = () => {\r\n        const interval = setInterval(() => {\r\n            this.next()\r\n        }, this.state.time)\r\n\r\n        this.setState({\r\n            interval\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Limpio el timer del state y crea denuevo el timer, reiniciando el timer  \r\n     */\r\n    resetTimer = () => {\r\n        const interval = clearInterval(\r\n            this.state.interval\r\n        )\r\n        this.setState({\r\n            interval\r\n        })\r\n        this.startTimer()\r\n    }\r\n\r\n    prev = (e) => {\r\n        const { \r\n            index,      // Indice\r\n        } = this.state;\r\n\r\n        if(index === 0){ // Cuando estoy en indice cero, ya no puedo ir atras\r\n            return;\r\n        }\r\n\r\n        // No soy indice = 0, entonces\r\n        this.setState(prevState => ({\r\n            index: prevState.index - 1,\r\n            translate: prevState.translate + this.widthCaro()\r\n        }))\r\n\r\n        //Controla el autoplay\r\n        if(this.state.autoplay){\r\n            this.resetTimer()\r\n        }\r\n    }\r\n    next = (e) => {\r\n\r\n        const { \r\n            index,      // Indice\r\n            images      //Todas la imagenes\r\n        } = this.state;\r\n        const length = images.length; //Cantidad de imagenes\r\n        \r\n\r\n        //Si soy la ultima imagen, entonces\r\n        if(index === length - 1){\r\n            return this.setState({\r\n                index: 0,\r\n                translate: 0\r\n            })\r\n        }\r\n\r\n        // No soy la ultima imagen, entonces\r\n        this.setState(prevState => ({\r\n            index: prevState.index + 1,\r\n            translate: prevState.translate + -(this.widthCaro())\r\n        }));\r\n\r\n        //Controla el autoplay\r\n        if(this.state.autoplay){\r\n            this.resetTimer()\r\n        }\r\n        \r\n    }\r\n\r\n    /**\r\n     * Retorna el tamaño del visor de nuestro carousel\r\n     */\r\n    widthCaro(){\r\n        return document.querySelector('.caro').clientWidth\r\n    }\r\n    \r\n\r\n    clickDot = (id) => {\r\n        \r\n        const { \r\n            index,   // Indice\r\n            translate\r\n        } = this.state; \r\n\r\n        //Si haces click en el mismo lugar donde estas, no hacer nada\r\n       if(id === index) return;\r\n\r\n        if(id > index){\r\n            this.setState({\r\n                translate:  -id * (this.widthCaro())\r\n            });\r\n        } else {\r\n            this.setState({\r\n                translate:  translate + (index - id ) * (this.widthCaro())\r\n            });\r\n        }\r\n\r\n        this.setState({\r\n            index: id\r\n        });\r\n\r\n        //Reinicia el timer\r\n        \r\n        //Controla el autoplay\r\n        if(this.state.autoplay){\r\n            this.resetTimer()\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { \r\n            images,     //Imagenes que vienen del State\r\n            index,      // Indice\r\n            translate,  // Cuanto se va a trasladar\r\n            dots,       //Dots\r\n            arrow       //Arrows\r\n        } = this.state;\r\n\r\n        const style = {\r\n            transform: `translate(${translate}px)`,\r\n            transition: 'transform ease-out 0.45s'\r\n        }\r\n\r\n        return (\r\n           <div className=\"caro\">\r\n                <div className=\"content\"\r\n                    style={style}\r\n                >\r\n                    {\r\n                        images.map((image, index) => (\r\n                            <CaroItem key={index} image={image} />\r\n                        ))\r\n                    }\r\n                </div>\r\n                \r\n                <Dots show={dots} clickDot={this.clickDot} index={index} images={images}/>\r\n\r\n                <Arrows show={arrow} clickNext={this.next} clickPrev={this.prev}/>\r\n           </div> \r\n        )\r\n    }\r\n}\r\n\r\nexport default Caro;","import React, { Component } from 'react';\nimport Caro from './Components/Caro/Caro';\nimport './App.css'\nclass App extends Component {\n\n  constructor(props){\n    super(props)\n    this.state= {\n      images: [\n        {\n            img: \"https://luismachain95.github.io/Caro/image/shoes1.jpg\",\n            link: \"enlace1\"\n        },\n        {\n            img: \"https://luismachain95.github.io/Caro/image/shoes2.jpg\",\n            link: \"enlace2\"\n        },\n        {\n            img: \"https://luismachain95.github.io/Caro/image/shoes3.jpg\",\n            link: \"enlace3\"\n        },\n        {\n            img: \"https://luismachain95.github.io/Caro/image/shoes4.jpg\",\n            link: \"enlace4\"\n        }\n    ],\n    }\n  }\n  render() {\n    // Si no se manda nada, se pone arrow, dots (Ojo sin autoplay)\n\n    //Autoplay\n    const config = {\n      autoplay: true\n    }\n    //Autoplay y Tiempo de 1segundo \n    const config1 = {\n      autoplay: true,\n      time: 1000,\n      dots: false\n    }\n    //Autoplay, tiempo de 2 seg y sin dots\n    const config2 = {\n      autoplay: true,\n      time: 2000,\n      dots: false,\n    }\n    //Autoplay, tiempo de 2 seg, sin dots, y sin flechas\n    const config3 = {\n      autoplay: true,\n      time: 2000,\n      dots: false,\n      arrow: false\n    }\n    return (\n      <div className=\"content\">\n        <h1>Caro - Simple Carousel (React)</h1>\n        <hr/>\n        <Caro images={this.state.images}/>\n        <hr/>\n        <Caro config={config} images={this.state.images}/>\n        <hr/>\n        <Caro config={config1} images={this.state.images}/>\n        <hr/>\n        <Caro config={config2} images={this.state.images}/>\n        <hr/>\n        <Caro config={config3} images={this.state.images}/>\n      </div> \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}